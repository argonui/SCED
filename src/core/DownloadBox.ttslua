local GlobalApi = require("Global/GlobalApi")

function onLoad()
  -- make sure the model is loaded so that we can use the bounds
  Wait.condition(buttonCreation, function() return not self.loading_custom end)
end

-- dynamic download button position based on model
function buttonCreation()
  local scale = self.getScale()
  local bounds = self.getBoundsNormalized()

  self.createButton({
    label = "Download",
    click_function = "buttonClick_download",
    function_owner = self,
    position = {
      x = 0,
      y = -(bounds.size.y / 2 + bounds.offset.y) / scale.y + 0.5,
      z = (bounds.size.z / 2 + 1.2) / scale.z
    },
    height = 700,
    width = 2300,
    font_size = 430,
    color = { 0, 0, 0 },
    font_color = { 1, 1, 1 },
    scale = { 1 / scale.x, 1, 1 / scale.z }
  })
end

function buttonClick_download(_, playerColor)
  local md = JSON.decode(self.getGMNotes()) or {}
  local filename = md.filename
  local player = playerColor and Player[playerColor] or nil
  local replace = self.guid
  GlobalApi.placeholderDownload(filename, player, replace)
end
