do
  local GUIDReferenceApi = {}

  local function callhandler(functionName, argument)
    return getObjectFromGUID("123456").call(functionName, argument)
  end

  -- General information:
  --- "owner" is a string that describes the parent object
  --- "type" is a string that describes the type of object

  -- Returns the matching object
  function GUIDReferenceApi.getObjectByOwnerAndType(owner, type)
    return callhandler("getObjectByOwnerAndType", { owner = owner, type = type })
  end

  -- Returns all matching objects as a table with references
  function GUIDReferenceApi.getObjectsByType(type)
    return callhandler("getObjectsByType", type)
  end

  -- Returns all matching objects as a table with references
  function GUIDReferenceApi.getObjectsByOwner(owner)
    return callhandler("getObjectsByOwner", owner)
  end

  -- Sends new information to the reference handler to edit the main index (if type/guid are omitted, entry will be removed)
  function GUIDReferenceApi.editIndex(owner, type, guid)
    return callhandler("editIndex", { owner = owner, type = type, guid = guid })
  end

  -- Returns the owner of an object or the object it's located on
  function GUIDReferenceApi.getOwnerOfObject(object)
    return callhandler("getOwnerOfObject", object)
  end

  function GUIDReferenceApi.removeObjectByOwnerAndType(owner, type)
    return callhandler("removeObjectByOwnerAndType", { owner = owner, type = type })
  end

  return GUIDReferenceApi
end
