do
  local XmlLib = {}

  function XmlLib.showInputWindow(titleText, inputText, confirmFunc, cancelFunc)
    titleText   = titleText or "My Title"
    inputText   = tostring(inputText or "Type your multi-line text here...")
    confirmFunc = confirmFunc or "onConfirmClicked"
    cancelFunc  = cancelFunc or "onCancelClicked"

    -- update the header
    XmlLib.setAttribute("InputDialog_title", "text", titleText)

    -- dynamic count, maybe revisit in the future
    --local _, count = string.gsub(inputText, "\n", "")

    -- update the input
    inputText      = inputText .. "\n"

    -- enforce height of 100 lines
    local count    = 100
    local fontSize = 18
    XmlLib.setAttributes("InputDialog_scrollableInput", {
      height      = count * (fontSize + 3),
      defaultText = inputText,
      text        = inputText
    })

    -- update the buttons
    XmlLib.setAttribute("InputDialog_confirmButton", "onClick", confirmFunc)
    XmlLib.setAttribute("InputDialog_cancelButton", "onClick", cancelFunc)

    -- show window
    XmlLib.setAttribute("InputDialog", "active", true)
  end

  function XmlLib.setAttribute(id, attribute, value)
    local newAttributes = {}
    newAttributes[attribute] = value
    XmlLib.setAttributes(id, newAttributes)
  end

  function XmlLib.setAttributes(id, newAttributes)
    local currentAttributes = UI.getAttributes(id) or {}
    for k, v in pairs(newAttributes or {}) do
      currentAttributes[k] = v
    end
    UI.setAttributes(id, currentAttributes)
  end

  return XmlLib
end
