local PlayermatApi    = require("playermat/PlayermatApi")

-- Flag to only sent the explanation once per session
local explanationSent = false

-- Track the matColor of the linked mat
local linkedMatColor

function updateSave()
  return JSON.encode({ linkedMatColor = linkedMatColor })
end

function onLoad(savedData)
  if savedData and savedData ~= "" then
    local loadedData = JSON.decode(savedData)
    linkedMatColor = loadedData.linkedMatColor
  end

  -- Add the context menu entry to manually link
  self.addContextMenuItem("Link to my Mat", function(playerColor)
    local matColor = PlayermatApi.getMatColor(playerColor)

    if not matColor then
      broadcastToColor("There was an error determining your playermat.", playerColor, "Red")
      return
    end

    if linkedMatColor == matColor then
      printToColor("This extension is already linked to you.", playerColor, "Orange")
      return
    end

    performLink(playerColor, matColor)
  end)
end

-- Link to the nearest playermat when dropped
function onDrop(playerColor)
  local matColor = PlayermatApi.getMatColorByPosition(self.getPosition())
  if linkedMatColor == matColor then return end
  performLink(playerColor, matColor)
end

-- Perform the linking and output messages
function performLink(playerColor, matColor)
  -- Maybe sent an explanation
  if not explanationSent then
    explanationSent = true
    printToColor("You can adjust this link by using its context menu.", playerColor)
  end

  local coloredString = "[" .. Color.fromString(matColor):toHex() .. "]" .. matColor .. "[-]"

  -- Enforce correct tags and update internal variable + description
  self.setTags({ "CleanUpHelper_ignore", "PlayermatExtension", matColor })
  self.setDescription("Linked to " .. coloredString)
  linkedMatColor = matColor

  -- Broadcast the result
  broadcastToColor("Linked this extension to " .. coloredString .. ".", playerColor)
end

-- Forward card collisions to the playermat
function onCollisionEnter(collisionInfo)
  if collisionInfo.collision_object.type ~= "Card" then return end

  -- Small hack: we are adding this property to the table to indicate that it should spawn uses
  collisionInfo.isOnExtension = true

  -- Forward this to the Playermat
  PlayermatApi.onCollisionEnter(linkedMatColor, collisionInfo)
end
