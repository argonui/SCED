local PlayermatApi = require("playermat/PlayermatApi")

function onLoad()
  self.addContextMenuItem("Discard 10 cards", shortSupply)
end

-- called by context menu entry
function shortSupply(playerColor)
  Player[playerColor].clearSelectedObjects()
  local matColor = PlayermatApi.getMatColorByPosition(self.getPosition())

  -- get draw deck and discard position
  local deckAreaObjects = PlayermatApi.getDeckAreaObjects(matColor)
  local drawDeck = deckAreaObjects.draw
  local discardPos = PlayermatApi.getDiscardPosition(matColor)

  -- error handling
  if discardPos == nil then
    broadcastToColor("Couldn't retrieve discard position from playermat!", playerColor, "Red")
    return
  end

  if drawDeck == nil then
    broadcastToColor("Deck not found!", playerColor, "Yellow")
    return
  elseif drawDeck.type ~= "Deck" then
    broadcastToColor("Deck only contains a single card!", playerColor, "Yellow")
    return
  end

  -- discard cards, waiting 0.7 seconds between each discard to give players visiblity of the cards
  broadcastToColor("Discarding top 10 cards for player color '" .. matColor .. "'.", playerColor, "White")
  for i = 1, 10 do
    Wait.time(function() drawDeck.takeObject({ flip = true, position = { discardPos.x, 2 + 0.075 * i, discardPos.z } }) end, 0.7 * (i - 1))
  end
end
