require("playercards/CardsWithHelper")
local PlayermatApi    = require("playermat/PlayermatApi")
local SearchLib       = require("util/SearchLib")
local TokenManagerApi = require("tokens/TokenManagerApi")

-- intentionally global
hasXML                = true
isHelperEnabled       = false

function onLoad(savedData)
  -- get level via metadata and proceed accordingly:
  -- lvl 2: one action
  -- lvl 5: two actions

  notes = JSON.decode(self.getGMNotes())
  if savedData and savedData ~= "" then
    local loadedData = JSON.decode(savedData)
    isHelperEnabled = loadedData.isHelperEnabled
  end
  if isHelperEnabled then updateDisplay() end
end

function updateSave()
  self.script_state = JSON.encode({
    isHelperEnabled = isHelperEnabled
  })
end

function addCharge(player)
  TokenManagerApi.addUseToCard(self, "resource")
  Wait.frames(function()
    local foundTokens = searchSelfForTokens()
    if foundTokens == 3 then
      addAction(player)
    end
  end, 5)
end

function searchSelfForTokens()
  clickableResourceCounter = nil
  local foundTokens = 0

  for _, obj in ipairs(SearchLib.onObject(self, "isTileOrToken", 0.8)) do
    local memo = obj.getMemo()
    if memo == "charge" then
      foundTokens = foundTokens + math.abs(obj.getQuantity())
    elseif memo == "resourceCounter" then
      foundTokens = obj.getVar("val")
      clickableResourceCounter = obj
      break
    end
  end
  return foundTokens
end

function takeAll(player)
  local foundTokens = searchSelfForTokens()
  local matColor = PlayermatApi.getMatColorByPosition(self.getPosition())
  PlayermatApi.updateCounter(matColor, "ResourceCounter", nil, foundTokens)

  if clickableResourceCounter then
    clickableResourceCounter.call("updateVal", 0)
  else
    for _, obj in ipairs(SearchLib.onObject(self, "isTileOrToken", 0.8)) do
      local memo = obj.getMemo()
      if memo == "charge" then
        obj.destruct()
      end
    end
  end

  local messageString = "Moved " .. foundTokens .. " resource(s) to " .. matColor .. "'s resource pool"
  if notes.id == "08058" then
    Wait.time(function() addCharge(player) end, 0.5)
    messageString = messageString .. " and placed one charge"
  end
  broadcastToColor(messageString .. ".", player.color)
end

function addAction(player)
  local numTokens
  if notes.id == "08058" then
    numTokens = 2
    broadcastToColor("Spawning two temporary action tokens.", player.color)
  else
    numTokens = 1
    broadcastToColor("Spawning one temporary action token.", player.color)
  end
  TokenManagerApi.spawnTokenGroup(self, "universalActionAbility", numTokens, 0.84, nil, true)
end
